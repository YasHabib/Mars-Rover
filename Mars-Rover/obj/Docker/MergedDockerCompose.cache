name: dockercompose7742273003979543433
services:
  mars-rover.api:
    build:
      context: C:\Users\yasin\Desktop\IRISNDT\Mars-Rover\Mars-Rover
      dockerfile: Mars-Rover.API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      ConnectionStrings__DefaultConnection: Server=marsrover.db;Database=marsroverdb;User
        Id=useryasin;password=marsroverpassword
    image: marsroverapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "2000"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    - mode: ingress
      target: 443
      published: "2020"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\yasin\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\yasin\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  marsrover.db:
    container_name: marsrover.db
    environment:
      POSTGRES_DB: marsroverdb
      POSTGRES_PASSWORD: marsroverpassword
      POSTGRES_USER: useryasin
    image: postgis/postgis:14-3.2-alpine
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5432
      published: "2025"
      protocol: tcp
    restart: on-failure
    volumes:
    - type: volume
      source: marsrover-db
      target: /var/lib/postgresql/data
      volume: {}
networks:
  default:
    name: dockercompose7742273003979543433_default
volumes:
  marsrover-db:
    name: dockercompose7742273003979543433_marsrover-db